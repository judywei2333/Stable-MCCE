{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Multi-Conformation Continuum Electrostatics - MCCE \u00b6 Page last updated on: 2020-01-16 MCCE is a biophysics simulation program combining continuum electrostatics and molecular mechanics. In this program, the protein side chain motions are simulated explicitly while the dielectric effect of solvent and bulk protein material is modeled by continuum electrostatics. What can MCCE do? \u00b6 MCCE can calculate: residue pka, cofactor Em and protein PI in protein-solvent systems; protein structural responses to changes in charge; residue ionization changes in response to protein structural changes; location and stoichiometry of proton transfers coupled to electron transfer References (Cite these papers if you use MCCE for publications): \u00b6 Song Y., J. Mao, Gunner M.R. (2009). J. Comp. Chem epub Mar 2009 Georgescu R.E., Alexov E.G., Gunner M.R.(2002). Combining conformational flexibility and continuum electrostatics for calculating pKa's in proteins. Biophys J. 83, 1731-1748 Alexov, E. and Gunner, M.R. (1997) Incorporating protein conformational flexibility into pH- titration calculations: Results on T4 Lysozyme. Biophys. J. 74, 2075-2093","title":"Overview"},{"location":"#multi-conformation-continuum-electrostatics-mcce","text":"Page last updated on: 2020-01-16 MCCE is a biophysics simulation program combining continuum electrostatics and molecular mechanics. In this program, the protein side chain motions are simulated explicitly while the dielectric effect of solvent and bulk protein material is modeled by continuum electrostatics.","title":"Multi-Conformation Continuum Electrostatics - MCCE"},{"location":"#what-can-mcce-do","text":"MCCE can calculate: residue pka, cofactor Em and protein PI in protein-solvent systems; protein structural responses to changes in charge; residue ionization changes in response to protein structural changes; location and stoichiometry of proton transfers coupled to electron transfer","title":"What can MCCE do?"},{"location":"#references-cite-these-papers-if-you-use-mcce-for-publications","text":"Song Y., J. Mao, Gunner M.R. (2009). J. Comp. Chem epub Mar 2009 Georgescu R.E., Alexov E.G., Gunner M.R.(2002). Combining conformational flexibility and continuum electrostatics for calculating pKa's in proteins. Biophys J. 83, 1731-1748 Alexov, E. and Gunner, M.R. (1997) Incorporating protein conformational flexibility into pH- titration calculations: Results on T4 Lysozyme. Biophys. J. 74, 2075-2093","title":"References (Cite these papers if you use MCCE for publications):"},{"location":"emexample/","text":"Calculate Em of heme in Cytochrome \u00b6 Page last updated on: 2019-12-16","title":"Em calculation"},{"location":"emexample/#calculate-em-of-heme-in-cytochrome","text":"Page last updated on: 2019-12-16","title":"Calculate Em of heme in Cytochrome"},{"location":"hbexample/","text":"Compute hydrogen bond network \u00b6 Page last updated on: 2019-12-16","title":"Hydrogen-bond network"},{"location":"hbexample/#compute-hydrogen-bond-network","text":"Page last updated on: 2019-12-16","title":"Compute hydrogen bond network"},{"location":"mcce2free/","text":"How to convert an existing mcce tpl file to free format tpl file? \u00b6 Page last updated on: 2020-02-16 There accumulated a big number of mcce tpl files (topology file of a molecule) which defines the conformers, atoms, connectivity and so on. Since mcce tpl file follows strict format, new mcce adopted a free format to save the same information. Follow these steps to convert an existing mcce tpl file to a new free format tpl file. This example is assuming you convert a mcce tpl file glu.tpl in param04 directory. Convert \u00b6 Run this command to convert mcce format to free format. bin / tpl - mcce2free . py param04 / glu . tpl > glu . ftpl The above output file has most entries converted. Fix \"rxn\" record \u00b6 Then we can manually compile rxn values in CONFORMER records. First manually replace rxn = with rxn02 = , rxn04 = , rxn08 = depending on the dielectric constant of the tpl file that was converted from. CONFORMER , GLU01 : Em0 = 0 . 0 , pKa0 = 0 . 00 , ne = 0 , nH = 0 , rxn02 = - 6 . 410 , rxn04 = - 3 . 100 , rxn08 = - 1 . 390 Error check \u00b6 Now find the atom name difference, especially H atoms. PDB is using version 3 names and old mcce is using version 2 names. For GLU, the name comparison can be found at here . If you have a pdb file of the residue/ligand, we can test the ftpl file against that pdb file: bin / verify_tpl . py ftplfile pdbfile It will report any atoms that can not be loaded by the converted ftpl file definition. To change the name in ftpl file, glu.ftp for example: sed - i 's/1HB / HB2/g' glu . ftpl You can verify the ftpl file again after the change of names. Store in param directory \u00b6 Finally, place the tested ftpl file under MCCE distribution's \"param\" directory. The MCCE distribution directory is the the ( HOME ) line in your run.prm.","title":"Convert mcce tpl file"},{"location":"mcce2free/#how-to-convert-an-existing-mcce-tpl-file-to-free-format-tpl-file","text":"Page last updated on: 2020-02-16 There accumulated a big number of mcce tpl files (topology file of a molecule) which defines the conformers, atoms, connectivity and so on. Since mcce tpl file follows strict format, new mcce adopted a free format to save the same information. Follow these steps to convert an existing mcce tpl file to a new free format tpl file. This example is assuming you convert a mcce tpl file glu.tpl in param04 directory.","title":"How to convert an existing mcce tpl file to free format tpl file?"},{"location":"mcce2free/#convert","text":"Run this command to convert mcce format to free format. bin / tpl - mcce2free . py param04 / glu . tpl > glu . ftpl The above output file has most entries converted.","title":"Convert"},{"location":"mcce2free/#fix-rxn-record","text":"Then we can manually compile rxn values in CONFORMER records. First manually replace rxn = with rxn02 = , rxn04 = , rxn08 = depending on the dielectric constant of the tpl file that was converted from. CONFORMER , GLU01 : Em0 = 0 . 0 , pKa0 = 0 . 00 , ne = 0 , nH = 0 , rxn02 = - 6 . 410 , rxn04 = - 3 . 100 , rxn08 = - 1 . 390","title":"Fix \"rxn\" record"},{"location":"mcce2free/#error-check","text":"Now find the atom name difference, especially H atoms. PDB is using version 3 names and old mcce is using version 2 names. For GLU, the name comparison can be found at here . If you have a pdb file of the residue/ligand, we can test the ftpl file against that pdb file: bin / verify_tpl . py ftplfile pdbfile It will report any atoms that can not be loaded by the converted ftpl file definition. To change the name in ftpl file, glu.ftp for example: sed - i 's/1HB / HB2/g' glu . ftpl You can verify the ftpl file again after the change of names.","title":"Error check"},{"location":"mcce2free/#store-in-param-directory","text":"Finally, place the tested ftpl file under MCCE distribution's \"param\" directory. The MCCE distribution directory is the the ( HOME ) line in your run.prm.","title":"Store in param directory"},{"location":"mfehowto/","text":"How to break down the energy of a residue ionization? \u00b6 Page last updated on: 2020-01-17","title":"Analyze ionization energy"},{"location":"mfehowto/#how-to-break-down-the-energy-of-a-residue-ionization","text":"Page last updated on: 2020-01-17","title":"How to break down the energy of a residue ionization?"},{"location":"newftpl/","text":"How to make a new topology file? \u00b6 Page last updated on: 2020-01-16","title":"Make a new topology file"},{"location":"newftpl/#how-to-make-a-new-topology-file","text":"Page last updated on: 2020-01-16","title":"How to make a new topology file?"},{"location":"pkaexample/","text":"Calculate pKas of Lysozyme \u00b6 Page last updated on: 2020-02-06 Background \u00b6 Lysozyme is a small enzyme that dissolves bacterial cell walls thus kills bacteria. It was discovered as the first antibiotic to inhibit bacteria growth in food, before penicillin. Crystal structure of hen egg white lysozyme - PDB ID 3WUM The residue GLU 35 and ASP 52 have been identified as two active sites. The pKas of these two residues play an important role in the enzyme's activity. In order for lysozyme to attack the glucose molecule of the substrate, GLU has high pKa and ASP 52 has low pKa. This way GLU 35 acts a proton donor, cuts the glucose with protonation of the glycosidic oxygen and a deprotonated GLU 52 stabilizes the highly charged intermediate, making the reaction easier. Jens Erik Nielsen and J. Andrew McCammon, Protein Sci. 2003 Sep; 12(9): 1894\u20131901 Prepare the calculation \u00b6 After the program is installed and execution path is configured (see link for details), make a working directory and go to the working directory. MCCE will generate intermediate files and result files in the current directory, so it's best to prepare one directory for calculation on one structure. mkdir 4 lzt cd 4 lzt Then download pdb file 4LZT to the working directory: jmao @jmao - desktop ~/ 4 lzt $ getpdb 4 lzt Inquiring the remote file 4 LZT . pdb ... Saving as 4 LZT . pdb ... Download completed . Configure run.prm for MCCE \u00b6 MCCE requires a file run.prm to guide the run. cp { / path / to / mcce / } run . prm . quick . / run . prm { / path / to / mcce / } is the path to the MCCE installation directory. The file run.prm defines how MCCE runs. If the line ends up with a keyword enclosed in a pair of parenthesis, this line is a definition line, with the key being the word in parenthesis and the value being the the first word of this line. The most modified entries \u00b6 ============================================================================== Most modified entries ------------------------------------------------------------------------------ Input and Output : prot . pdb ( INPDB ) Steps : f step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) f step 2 : make rotatmers ( DO_ROTAMERS ) f step 3 : do energy calculations ( DO_ENERGY ) f step 4 : monte carlo sampling ( DO_MONTE ) f step 6 : Hydrogen bond analysis ( DO_ANALYSIS ) ============================================================================== This line defines the input structure file: prot . pdb ( INPDB ) It's a good idea to keep the downloaded pdb file 3WUM.pdb, so we make a copy named prot.pdb: cp 4 LZT . pdb prot . pdb Since we are calculating pKas, we need to run from step 1 to 4. Mark these steps \"t\" for \"true\". t step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) t step 2 : make rotatmers ( DO_ROTAMERS ) t step 3 : do energy calculations ( DO_ENERGY ) t step 4 : monte carlo sampling ( DO_MONTE ) The less modified entries \u00b6 This section is usually modified only for the first run. It defines the location of the parameters and titration conditions. 8 . 0 Protein dielectric constant for DelPhi ( EPSILON_PROT ) / home / jmao / projects / Stable - MCCE / extra . tpl ( EXTRA ) / home / jmao / projects / Stable - MCCE / name . txt MCCE renaming rule . ( RENAME_RULES ) ph \" ph \" for pH titration , \" eh \" for eh titration ( TITR_TYPE ) 0 . 0 Initial pH ( TITR_PH0 ) 1 . 0 pH interval ( TITR_PHD ) 0 . 0 Initial Eh ( TITR_EH0 ) 30 . 0 Eh interval ( in mV ) ( TITR_EHD ) 15 Number of titration points ( TITR_STEPS ) .. In the above example, I set the dielectric constant 8.0, which is good for pKa calculation. The path to extra.tpl and name.txt is set to my mcce installation directory. the titration type is set to be \"ph\" the titration range from 0 to 14 at step 1, 15 titration points in total The advanced entries \u00b6 Some entries here have to be customized for your installation and system. / home / jmao / projects / Stable - MCCE ( MCCE_HOME ) This should point to where your mcce is installed. / home / jmao / projects / Stable - MCCE / bin / delphi DelPhi executable ( DELPHI_EXE ) This points to The location of delphi executable. / tmp delphi temporary file folder , \"/tmp\" uses node ( PBE_FOLDER ) For some systems, /tmp is preferred temporary directory. Run mcce \u00b6 Make sure mcce is in your executable path. For me, I run export PATH =/ home / jmao / projects / Stable - MCCE / bin : $ PATH To set the PATH variable. To run mcce mcce Ths program takes 30 minutes to 1 hour to finish. So you can run mcce > run . log & to put the program in background. Results \u00b6 The pKa report is in file pK.out. cat pK . out From the result, GLU 35 has a higher pKa than ASP 52. To analyze the ionization energy of an ionizable residue at ph 5: mfe . py ASP - A0052_ 5 at ph 7: mfe . py ASP - A0052_ 7","title":"pKa calculation"},{"location":"pkaexample/#calculate-pkas-of-lysozyme","text":"Page last updated on: 2020-02-06","title":"Calculate pKas of Lysozyme"},{"location":"pkaexample/#background","text":"Lysozyme is a small enzyme that dissolves bacterial cell walls thus kills bacteria. It was discovered as the first antibiotic to inhibit bacteria growth in food, before penicillin. Crystal structure of hen egg white lysozyme - PDB ID 3WUM The residue GLU 35 and ASP 52 have been identified as two active sites. The pKas of these two residues play an important role in the enzyme's activity. In order for lysozyme to attack the glucose molecule of the substrate, GLU has high pKa and ASP 52 has low pKa. This way GLU 35 acts a proton donor, cuts the glucose with protonation of the glycosidic oxygen and a deprotonated GLU 52 stabilizes the highly charged intermediate, making the reaction easier. Jens Erik Nielsen and J. Andrew McCammon, Protein Sci. 2003 Sep; 12(9): 1894\u20131901","title":"Background"},{"location":"pkaexample/#prepare-the-calculation","text":"After the program is installed and execution path is configured (see link for details), make a working directory and go to the working directory. MCCE will generate intermediate files and result files in the current directory, so it's best to prepare one directory for calculation on one structure. mkdir 4 lzt cd 4 lzt Then download pdb file 4LZT to the working directory: jmao @jmao - desktop ~/ 4 lzt $ getpdb 4 lzt Inquiring the remote file 4 LZT . pdb ... Saving as 4 LZT . pdb ... Download completed .","title":"Prepare the calculation"},{"location":"pkaexample/#configure-runprm-for-mcce","text":"MCCE requires a file run.prm to guide the run. cp { / path / to / mcce / } run . prm . quick . / run . prm { / path / to / mcce / } is the path to the MCCE installation directory. The file run.prm defines how MCCE runs. If the line ends up with a keyword enclosed in a pair of parenthesis, this line is a definition line, with the key being the word in parenthesis and the value being the the first word of this line.","title":"Configure run.prm for MCCE"},{"location":"pkaexample/#the-most-modified-entries","text":"============================================================================== Most modified entries ------------------------------------------------------------------------------ Input and Output : prot . pdb ( INPDB ) Steps : f step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) f step 2 : make rotatmers ( DO_ROTAMERS ) f step 3 : do energy calculations ( DO_ENERGY ) f step 4 : monte carlo sampling ( DO_MONTE ) f step 6 : Hydrogen bond analysis ( DO_ANALYSIS ) ============================================================================== This line defines the input structure file: prot . pdb ( INPDB ) It's a good idea to keep the downloaded pdb file 3WUM.pdb, so we make a copy named prot.pdb: cp 4 LZT . pdb prot . pdb Since we are calculating pKas, we need to run from step 1 to 4. Mark these steps \"t\" for \"true\". t step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) t step 2 : make rotatmers ( DO_ROTAMERS ) t step 3 : do energy calculations ( DO_ENERGY ) t step 4 : monte carlo sampling ( DO_MONTE )","title":"The most modified entries"},{"location":"pkaexample/#the-less-modified-entries","text":"This section is usually modified only for the first run. It defines the location of the parameters and titration conditions. 8 . 0 Protein dielectric constant for DelPhi ( EPSILON_PROT ) / home / jmao / projects / Stable - MCCE / extra . tpl ( EXTRA ) / home / jmao / projects / Stable - MCCE / name . txt MCCE renaming rule . ( RENAME_RULES ) ph \" ph \" for pH titration , \" eh \" for eh titration ( TITR_TYPE ) 0 . 0 Initial pH ( TITR_PH0 ) 1 . 0 pH interval ( TITR_PHD ) 0 . 0 Initial Eh ( TITR_EH0 ) 30 . 0 Eh interval ( in mV ) ( TITR_EHD ) 15 Number of titration points ( TITR_STEPS ) .. In the above example, I set the dielectric constant 8.0, which is good for pKa calculation. The path to extra.tpl and name.txt is set to my mcce installation directory. the titration type is set to be \"ph\" the titration range from 0 to 14 at step 1, 15 titration points in total","title":"The less modified entries"},{"location":"pkaexample/#the-advanced-entries","text":"Some entries here have to be customized for your installation and system. / home / jmao / projects / Stable - MCCE ( MCCE_HOME ) This should point to where your mcce is installed. / home / jmao / projects / Stable - MCCE / bin / delphi DelPhi executable ( DELPHI_EXE ) This points to The location of delphi executable. / tmp delphi temporary file folder , \"/tmp\" uses node ( PBE_FOLDER ) For some systems, /tmp is preferred temporary directory.","title":"The advanced entries"},{"location":"pkaexample/#run-mcce","text":"Make sure mcce is in your executable path. For me, I run export PATH =/ home / jmao / projects / Stable - MCCE / bin : $ PATH To set the PATH variable. To run mcce mcce Ths program takes 30 minutes to 1 hour to finish. So you can run mcce > run . log & to put the program in background.","title":"Run mcce"},{"location":"pkaexample/#results","text":"The pKa report is in file pK.out. cat pK . out From the result, GLU 35 has a higher pKa than ASP 52. To analyze the ionization energy of an ionizable residue at ph 5: mfe . py ASP - A0052_ 5 at ph 7: mfe . py ASP - A0052_ 7","title":"Results"},{"location":"quick/","text":"MCCE quick start \u00b6 Page last updated on: 2020-01-16 Get the code \u00b6 To download the latest code: \u00b6 git clone https://github.com/GunnerLab/Stable-MCCE.git Compile the code: \u00b6 Compile: make clean make Add the executable to your path: export PATH = { / path / to / mcce / } bin : $ PATH {/path/to/mcce/} is the path to the MCCE installation directory. Troubleshooting: On Mac OS X, an explicit memory free for tree is not supported. You may have to change this subroutine in file lib/db.c /* release database memory */ void free_param () { tdestroy ( param_root , free ); return ; } to /* release database memory */ void free_param () { return ; } Prepare a working directory \u00b6 Working directory: \u00b6 mkdir test_lysozyme cd test_lysozyme Get a pdb file \u00b6 getpdb 1 dpx You now have a pdb file 1DPX in the working directory. run.prm \u00b6 MCCE requires a file run.prm to guide the run. cp { / path / to / mcce / } run . prm . quick . / run . prm {/path/to/mcce/} is the path to the MCCE installation directory. Edit the following lines in run.prm: prot . pdb ( INPDB ) to 1 DPX . pdb ( INPDB ) f step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) f step 2 : make rotatmers ( DO_ROTAMERS ) f step 3 : do energy calculations ( DO_ENERGY ) f step 4 : monte carlo sampling ( DO_MONTE ) f step 6 : analysis ( DO_ANALYSIS ) to t step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) t step 2 : make rotatmers ( DO_ROTAMERS ) t step 3 : do energy calculations ( DO_ENERGY ) t step 4 : monte carlo sampling ( DO_MONTE ) f step 6 : analysis ( DO_ANALYSIS ) / home / mcce / Stable - MCCE / extra . tpl ( EXTRA ) / home / mcce / Stable - MCCE / name . txt MCCE renaming rule . ( RENAME_RULES ) to { / path / to / mcce / } extra . tpl ( EXTRA ) { / path / to / mcce / } name . txt MCCE renaming rule . ( RENAME_RULES ) / home / mcce / Stable - MCCE ( MCCE_HOME ) to { / path / to / mcce / } ( MCCE_HOME ) / home / mcce / Stable - MCCE / bin / delphi DelPhi executable ( DELPHI_EXE ) to { / path / to / mcce / } bin / delphi DelPhi executable ( DELPHI_EXE ) / scratch delphi temporary file folder , \"/tmp\" uses node ( PBE_FOLDER ) to / tmp delphi temporary file folder , \"/tmp\" uses node ( PBE_FOLDER ) Run mcce \u00b6 mcce > run . log & The log will be saved in file run.log.","title":"Quick Start"},{"location":"quick/#mcce-quick-start","text":"Page last updated on: 2020-01-16","title":"MCCE quick start"},{"location":"quick/#get-the-code","text":"","title":"Get the code"},{"location":"quick/#to-download-the-latest-code","text":"git clone https://github.com/GunnerLab/Stable-MCCE.git","title":"To download the latest code:"},{"location":"quick/#compile-the-code","text":"Compile: make clean make Add the executable to your path: export PATH = { / path / to / mcce / } bin : $ PATH {/path/to/mcce/} is the path to the MCCE installation directory. Troubleshooting: On Mac OS X, an explicit memory free for tree is not supported. You may have to change this subroutine in file lib/db.c /* release database memory */ void free_param () { tdestroy ( param_root , free ); return ; } to /* release database memory */ void free_param () { return ; }","title":"Compile the code:"},{"location":"quick/#prepare-a-working-directory","text":"","title":"Prepare a working directory"},{"location":"quick/#working-directory","text":"mkdir test_lysozyme cd test_lysozyme","title":"Working directory:"},{"location":"quick/#get-a-pdb-file","text":"getpdb 1 dpx You now have a pdb file 1DPX in the working directory.","title":"Get a pdb file"},{"location":"quick/#runprm","text":"MCCE requires a file run.prm to guide the run. cp { / path / to / mcce / } run . prm . quick . / run . prm {/path/to/mcce/} is the path to the MCCE installation directory. Edit the following lines in run.prm: prot . pdb ( INPDB ) to 1 DPX . pdb ( INPDB ) f step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) f step 2 : make rotatmers ( DO_ROTAMERS ) f step 3 : do energy calculations ( DO_ENERGY ) f step 4 : monte carlo sampling ( DO_MONTE ) f step 6 : analysis ( DO_ANALYSIS ) to t step 1 : pre - run , pdb -> mcce pdb ( DO_PREMCCE ) t step 2 : make rotatmers ( DO_ROTAMERS ) t step 3 : do energy calculations ( DO_ENERGY ) t step 4 : monte carlo sampling ( DO_MONTE ) f step 6 : analysis ( DO_ANALYSIS ) / home / mcce / Stable - MCCE / extra . tpl ( EXTRA ) / home / mcce / Stable - MCCE / name . txt MCCE renaming rule . ( RENAME_RULES ) to { / path / to / mcce / } extra . tpl ( EXTRA ) { / path / to / mcce / } name . txt MCCE renaming rule . ( RENAME_RULES ) / home / mcce / Stable - MCCE ( MCCE_HOME ) to { / path / to / mcce / } ( MCCE_HOME ) / home / mcce / Stable - MCCE / bin / delphi DelPhi executable ( DELPHI_EXE ) to { / path / to / mcce / } bin / delphi DelPhi executable ( DELPHI_EXE ) / scratch delphi temporary file folder , \"/tmp\" uses node ( PBE_FOLDER ) to / tmp delphi temporary file folder , \"/tmp\" uses node ( PBE_FOLDER )","title":"run.prm"},{"location":"quick/#run-mcce","text":"mcce > run . log & The log will be saved in file run.log.","title":"Run mcce"},{"location":"runprm/","text":"How to customize run.prm, the run configuration file? \u00b6 Page last updated on: 2020-01-16","title":"Customize run.prm"},{"location":"runprm/#how-to-customize-runprm-the-run-configuration-file","text":"Page last updated on: 2020-01-16","title":"How to customize run.prm, the run configuration file?"},{"location":"tools/","text":"MCCE tools reference \u00b6 Page last updated on: 2020-02-16 Improving and helping runs \u00b6 energies.py \u00b6 Run step3 with multiple threads. Syntax: energies . py [ - h ] [ - p processes ] [ - r ] [ - c start end ] [ - e / path / to / mcce ] Optional arguments: Argument Description -h, --help show this help message and exit -p processes run mcce with number of processes, default to 1 -r refresh opp files and head3.lst without running delphi -c start end starting and ending conformer, default to 1 and 9999 -e /path/to/mcce mcce executable location, default to \"mcce\" Examples: energies . py - p 6 This command runs step 3 in 6 threads. energies . py - r This command runs step 3 just to refresh head3.lst and vdw energy. energies . py - c 1 100 - p 4 This command calculates conformer from 1 to 100 in 5 threads. Note After this command, the lines: 1 delphi start conformer number , 0 based ( PBE_START ) 99999 delphi end conformer number , self included ( PBE_END ) in run.prm file might be altered. getpdb \u00b6 Download a pdb file by its PDB ID. Syntax: getpbd pdbid [ saved name ] Example: getpdb 1 akk Inquiring the remote file 1 AKK . pdb ... Saving as 1 AKK . pdb ... Download completed . Or getpdb 1 akk prot . pdb Inquiring the remote file 1 AKK . pdb ... Saving as prot . pdb ... Download completed . to save as specified name. translate_step2.py \u00b6 Translate old atom names in step2_out to new PDB v3 names. Syntax: translate_step2 . py step2_out . pdb Hydrogen names in PDB v3 are significantly different from PDB v2. Due to the randomness in step 2, it is sometimes desired to preserve step2_out.pdb. This tool translates the names so that step2_out.pdb so that it can be used by new mcce. This program prints the translated content on screen. So the user is responsible to make backup of the step2_out.pdb file and redirect the outcome to a new step2_out.pdb. Example: cp step2_out . pdb step2_out . pdb . bak translate_step2 . py step2_out . pdb . bak > step2_out . pdb Result Analysis \u00b6 state.py \u00b6 Analyze how a microstate energy is composed. Syntax: state . py Required files: run.prm head3.lst extra.tpl for scaling factors that are not equal to 1. energies/*.opp for pairwise interactions microstate file named \"states\" The microstate file is in a fixed format. The first line is like: T = 298 . 15 , ph = 7 . 0 , eh = 0 . 0 It specifies the the environment variables which affects the energy calculation. Variables are separated by \", \". The variable names are not case sensitive. T: Temperature. Room temperature is 298.15 K ph: pH value. eh: Eh value, the electric potential for potential titration. The rest of the lines are microstates. One line per state. Each line consists the index number of conformers (0 based). Numbers can be separated by either comma or space. Example: Make a states file: Run state . py mfe.py \u00b6 Analyze ionization energy by mean field approach. Syntax: state . py Residue_ID pH [ pairwise interaction cut_off ] Residue_ID: Residue ID as in pK.out pH: pH value at which ionization energy is calculated. Environment pH is a factor of AH <=> A- + H+ reaction. Also the calculation will use the conformation of other residues at this pH. cut_off: Report only pairwise interaction bigger than this cut off value. Required files: run.prm head3.lst extra.tpl for scaling factors that are not equal to 1. energies/*.opp for pairwise interactions Example: Check titration result in pKa.out: cat pK . out ... ASP - A0052_ 2 . 275 ... ASP-A0052 is the residue_ID. Its calculated pKa is 2.275. At this point, the free energy of reaction from ASP neutral to ASP ionized should be close to 0. Run jmao @jmao - desktop ~/ 3 wum $ mfe . py ASP - A0052_ 2.275 0.1 Residue ASP - A0052_ pKa / Em = 2.275 ================================= Terms pH meV Kcal --------------------------------- vdw0 - 0.01 - 0.71 - 0.02 vdw1 0.00 0.20 0.00 tors - 0.08 - 4.47 - 0.10 ebkb - 0.82 - 47.40 - 1.11 dsol 1.22 71.06 1.67 offset - 0.62 - 36.17 - 0.85 pH & pK0 2.48 143.66 3.38 Eh & Em0 0.00 0.00 0.00 residues - 2.17 - 126.03 - 2.96 ********************************* TOTAL 0.00 0.14 0.00 sum_crg ********************************* ASNA0044_ - 0.65 - 37.99 - 0.89 0.00 ARGA0045_ - 0.11 - 6.45 - 0.15 1.00 ASNA0046_ - 0.61 - 35.50 - 0.83 0.00 ASPA0048_ 0.33 19.44 0.46 - 0.58 GLNA0057_ 0.15 8.84 0.21 0.00 ASNA0059_ - 0.69 - 40.19 - 0.94 0.00 ARGA0061_ - 0.25 - 14.74 - 0.35 1.00 ASPA0066_ 0.14 8.38 0.20 - 0.41 ARGA0112_ - 0.18 - 10.37 - 0.24 1.00 ================================= You can do mfe calculation at pH other than mid-point. Parameter file preparation \u00b6 Connecting to other programs \u00b6","title":"Tools Program Reference"},{"location":"tools/#mcce-tools-reference","text":"Page last updated on: 2020-02-16","title":"MCCE tools reference"},{"location":"tools/#improving-and-helping-runs","text":"","title":"Improving and helping runs"},{"location":"tools/#energiespy","text":"Run step3 with multiple threads. Syntax: energies . py [ - h ] [ - p processes ] [ - r ] [ - c start end ] [ - e / path / to / mcce ] Optional arguments: Argument Description -h, --help show this help message and exit -p processes run mcce with number of processes, default to 1 -r refresh opp files and head3.lst without running delphi -c start end starting and ending conformer, default to 1 and 9999 -e /path/to/mcce mcce executable location, default to \"mcce\" Examples: energies . py - p 6 This command runs step 3 in 6 threads. energies . py - r This command runs step 3 just to refresh head3.lst and vdw energy. energies . py - c 1 100 - p 4 This command calculates conformer from 1 to 100 in 5 threads. Note After this command, the lines: 1 delphi start conformer number , 0 based ( PBE_START ) 99999 delphi end conformer number , self included ( PBE_END ) in run.prm file might be altered.","title":"energies.py"},{"location":"tools/#getpdb","text":"Download a pdb file by its PDB ID. Syntax: getpbd pdbid [ saved name ] Example: getpdb 1 akk Inquiring the remote file 1 AKK . pdb ... Saving as 1 AKK . pdb ... Download completed . Or getpdb 1 akk prot . pdb Inquiring the remote file 1 AKK . pdb ... Saving as prot . pdb ... Download completed . to save as specified name.","title":"getpdb"},{"location":"tools/#translate_step2py","text":"Translate old atom names in step2_out to new PDB v3 names. Syntax: translate_step2 . py step2_out . pdb Hydrogen names in PDB v3 are significantly different from PDB v2. Due to the randomness in step 2, it is sometimes desired to preserve step2_out.pdb. This tool translates the names so that step2_out.pdb so that it can be used by new mcce. This program prints the translated content on screen. So the user is responsible to make backup of the step2_out.pdb file and redirect the outcome to a new step2_out.pdb. Example: cp step2_out . pdb step2_out . pdb . bak translate_step2 . py step2_out . pdb . bak > step2_out . pdb","title":"translate_step2.py"},{"location":"tools/#result-analysis","text":"","title":"Result Analysis"},{"location":"tools/#statepy","text":"Analyze how a microstate energy is composed. Syntax: state . py Required files: run.prm head3.lst extra.tpl for scaling factors that are not equal to 1. energies/*.opp for pairwise interactions microstate file named \"states\" The microstate file is in a fixed format. The first line is like: T = 298 . 15 , ph = 7 . 0 , eh = 0 . 0 It specifies the the environment variables which affects the energy calculation. Variables are separated by \", \". The variable names are not case sensitive. T: Temperature. Room temperature is 298.15 K ph: pH value. eh: Eh value, the electric potential for potential titration. The rest of the lines are microstates. One line per state. Each line consists the index number of conformers (0 based). Numbers can be separated by either comma or space. Example: Make a states file: Run state . py","title":"state.py"},{"location":"tools/#mfepy","text":"Analyze ionization energy by mean field approach. Syntax: state . py Residue_ID pH [ pairwise interaction cut_off ] Residue_ID: Residue ID as in pK.out pH: pH value at which ionization energy is calculated. Environment pH is a factor of AH <=> A- + H+ reaction. Also the calculation will use the conformation of other residues at this pH. cut_off: Report only pairwise interaction bigger than this cut off value. Required files: run.prm head3.lst extra.tpl for scaling factors that are not equal to 1. energies/*.opp for pairwise interactions Example: Check titration result in pKa.out: cat pK . out ... ASP - A0052_ 2 . 275 ... ASP-A0052 is the residue_ID. Its calculated pKa is 2.275. At this point, the free energy of reaction from ASP neutral to ASP ionized should be close to 0. Run jmao @jmao - desktop ~/ 3 wum $ mfe . py ASP - A0052_ 2.275 0.1 Residue ASP - A0052_ pKa / Em = 2.275 ================================= Terms pH meV Kcal --------------------------------- vdw0 - 0.01 - 0.71 - 0.02 vdw1 0.00 0.20 0.00 tors - 0.08 - 4.47 - 0.10 ebkb - 0.82 - 47.40 - 1.11 dsol 1.22 71.06 1.67 offset - 0.62 - 36.17 - 0.85 pH & pK0 2.48 143.66 3.38 Eh & Em0 0.00 0.00 0.00 residues - 2.17 - 126.03 - 2.96 ********************************* TOTAL 0.00 0.14 0.00 sum_crg ********************************* ASNA0044_ - 0.65 - 37.99 - 0.89 0.00 ARGA0045_ - 0.11 - 6.45 - 0.15 1.00 ASNA0046_ - 0.61 - 35.50 - 0.83 0.00 ASPA0048_ 0.33 19.44 0.46 - 0.58 GLNA0057_ 0.15 8.84 0.21 0.00 ASNA0059_ - 0.69 - 40.19 - 0.94 0.00 ARGA0061_ - 0.25 - 14.74 - 0.35 1.00 ASPA0066_ 0.14 8.38 0.20 - 0.41 ARGA0112_ - 0.18 - 10.37 - 0.24 1.00 ================================= You can do mfe calculation at pH other than mid-point.","title":"mfe.py"},{"location":"tools/#parameter-file-preparation","text":"","title":"Parameter file preparation"},{"location":"tools/#connecting-to-other-programs","text":"","title":"Connecting to other programs"},{"location":"wikihowto/","text":"How to edit MCCE wiki \u00b6 Page last updated on: 2020-05-02 This documentation is written in mkdocs, which uses markdown language and publishes on github pages at url https://github.com/GunnerLab/Stable-MCCE . Install of Mkdocs \u00b6 You need pip, a python package manager, for installation. Generally, you are able to install pip through conda conda install pip or system package manager sudo aptitude install python - pip If you don't know pip, please go to https://pip.pypa.io/en/stable/ for more information. In a terminal window, run these commands to install mkdocs, theme, and necessary plugins for documentation of this project. pip install -- upgrade pip pip install bs4 pip install unicode pip install mkdocs pip install mkdocs - material pip install pymdown - extensions pip install markdown - blockdiag pip install markdown - include pip install mkdocs - git - revision - date - plugin Writing and editing \u00b6 All documentation files reside under folder wiki/ mkdocs.yml : configuration file, also defines the menu docs/users/ : location of documentation files for users docs/developers/ : location of documentation files for developers site/ : site web pages published by command mkdocs gh-deploy Under wiki/ directory, run mkdocs serve will bring up a web service, and point browser to http://localhost:8000 to enable viewing and debugging the documentation. Deploying \u00b6 Commit changes: \u00b6 git commit - a - m \"updated by jmao\" This commit will update the time stamp on the page as well. Push to your forked repository \u00b6 First check if you set up the GunnerLab as upstream For example: ( base ) jmao @pc : ~/ projects / Stable - MCCE / wiki $ git remote - v origin https : // github . com / newbooks / Stable - MCCE . git ( fetch ) origin https : // github . com / newbooks / Stable - MCCE . git ( push ) upstream https : // github . com / GunnerLab / Stable - MCCE . git ( fetch ) upstream https : // github . com / GunnerLab / Stable - MCCE . git ( push ) If you do not have upstream repo, push to the origin, then make a pull request: git push Then go to https://github.com/ under your forked repository. Make a pull request. Someone will publish the edit for you. Publish directly \u00b6 If you are a group member with publish permission, you can publish directly. Make sure the upstream is setup properly: git remote - v If upstream is not pointing to https://github.com/GunnerLab/Stable-MCCE.git , run git remote add upstream https : // github . com / GunnerLab / Stable - MCCE . git Under wiki folder, run gh - deploy ( base ) jmao @pc : ~/ projects / Stable - MCCE / wiki $ mkdocs gh - deploy INFO - Cleaning site directory INFO - Building documentation to directory : / home / jmao / projects / Stable - MCCE / wiki / site INFO - Copying '/home/jmao/projects/Stable-MCCE/wiki/site' to 'gh-pages' branch and pushing to GitHub . INFO - Your documentation should shortly be available at : https : // GunnerLab . github . io / Stable - MCCE / If gh-deploy reports conflict in special branch gh-pages, use \"--force\" switch to overwrite: mkdocs gh - deploy --force The published site is on: https://gunnerlab.github.io/Stable-MCCE/ .","title":"How to write documentation"},{"location":"wikihowto/#how-to-edit-mcce-wiki","text":"Page last updated on: 2020-05-02 This documentation is written in mkdocs, which uses markdown language and publishes on github pages at url https://github.com/GunnerLab/Stable-MCCE .","title":"How to edit MCCE wiki"},{"location":"wikihowto/#install-of-mkdocs","text":"You need pip, a python package manager, for installation. Generally, you are able to install pip through conda conda install pip or system package manager sudo aptitude install python - pip If you don't know pip, please go to https://pip.pypa.io/en/stable/ for more information. In a terminal window, run these commands to install mkdocs, theme, and necessary plugins for documentation of this project. pip install -- upgrade pip pip install bs4 pip install unicode pip install mkdocs pip install mkdocs - material pip install pymdown - extensions pip install markdown - blockdiag pip install markdown - include pip install mkdocs - git - revision - date - plugin","title":"Install of Mkdocs"},{"location":"wikihowto/#writing-and-editing","text":"All documentation files reside under folder wiki/ mkdocs.yml : configuration file, also defines the menu docs/users/ : location of documentation files for users docs/developers/ : location of documentation files for developers site/ : site web pages published by command mkdocs gh-deploy Under wiki/ directory, run mkdocs serve will bring up a web service, and point browser to http://localhost:8000 to enable viewing and debugging the documentation.","title":"Writing and editing"},{"location":"wikihowto/#deploying","text":"","title":"Deploying"},{"location":"wikihowto/#commit-changes","text":"git commit - a - m \"updated by jmao\" This commit will update the time stamp on the page as well.","title":"Commit changes:"},{"location":"wikihowto/#push-to-your-forked-repository","text":"First check if you set up the GunnerLab as upstream For example: ( base ) jmao @pc : ~/ projects / Stable - MCCE / wiki $ git remote - v origin https : // github . com / newbooks / Stable - MCCE . git ( fetch ) origin https : // github . com / newbooks / Stable - MCCE . git ( push ) upstream https : // github . com / GunnerLab / Stable - MCCE . git ( fetch ) upstream https : // github . com / GunnerLab / Stable - MCCE . git ( push ) If you do not have upstream repo, push to the origin, then make a pull request: git push Then go to https://github.com/ under your forked repository. Make a pull request. Someone will publish the edit for you.","title":"Push to your forked repository"},{"location":"wikihowto/#publish-directly","text":"If you are a group member with publish permission, you can publish directly. Make sure the upstream is setup properly: git remote - v If upstream is not pointing to https://github.com/GunnerLab/Stable-MCCE.git , run git remote add upstream https : // github . com / GunnerLab / Stable - MCCE . git Under wiki folder, run gh - deploy ( base ) jmao @pc : ~/ projects / Stable - MCCE / wiki $ mkdocs gh - deploy INFO - Cleaning site directory INFO - Building documentation to directory : / home / jmao / projects / Stable - MCCE / wiki / site INFO - Copying '/home/jmao/projects/Stable-MCCE/wiki/site' to 'gh-pages' branch and pushing to GitHub . INFO - Your documentation should shortly be available at : https : // GunnerLab . github . io / Stable - MCCE / If gh-deploy reports conflict in special branch gh-pages, use \"--force\" switch to overwrite: mkdocs gh - deploy --force The published site is on: https://gunnerlab.github.io/Stable-MCCE/ .","title":"Publish directly"}]}